//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxBupc.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _HUMMERSVN_WXBUP_WXBUPC_BASE_CLASSES_H
#define _HUMMERSVN_WXBUP_WXBUPC_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/gauge.h>
#include <wx/stattext.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/checkbox.h>
#include <wx/splitter.h>
#include <wx/panel.h>
#include <wx/statbox.h>
#include <wx/textctrl.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/richtext/richtextctrl.h>
#include <wx/statusbr.h>
#include <wx/dialog.h>
#include <wx/spinctrl.h>
#include <wx/radiobox.h>
#include <wx/filepicker.h>
#include <wx/button.h>
#include <wx/slider.h>
#include <wx/listctrl.h>
#include <wx/treebook.h>
#include <wx/listbox.h>
#include <wx/dirctrl.h>
#include <wx/combobox.h>
#include <wx/checklst.h>
#include <wx/hyperlink.h>
#include <wx/statline.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class MyFrameBase : public wxFrame
{
public:
    enum {
        wxID_LOG_CLEAR = 10001,
        wxID_LOG_DELETE = 10002,
        wxID_LOG_SHOW = 10003,
        wxID_LOG_VIEW = 10004,
        wxID_LOG_WINDOW = 10005,
        wxID_MENU_BACKUP = 10006,
        wxID_MENU_DUMP = 10007,
        wxID_MENU_OPTIONS = 10008,
        wxID_MENU_RESTORE = 10009,
        wxID_MENU_SEL_DIR = 10010,
        wxID_NEW_JOB = 10011,
        wxID_TB_BACKUP = 10012,
        wxID_TB_DEL = 10013,
        wxID_TB_EDIT = 10014,
        wxID_TB_OPEN = 10015,
        wxID_TB_RESTORE = 10016,
        wxID_TB_STOP = 10017,
        wxID_TB_TEST = 10018,
        wxID_TOOLBAR_TOGGLE_HORIZONTAL_TEXT = 10019,
    };
protected:
    wxMenuBar* m_menubarMain;
    wxMenu* m_menuFile;
    wxMenuItem* m_menuItemNewJobFile;
    wxMenuItem* m_menuItemSelJobFile;
    wxMenuItem* m_menuItemEditJobFile;
    wxMenuItem* m_menuItemSep1;
    wxMenuItem* m_menuItemRenameFile;
    wxMenuItem* m_menuItemSaveFileAs;
    wxMenuItem* m_menuItemSep3;
    wxMenuItem* m_menuItemBackup;
    wxMenuItem* m_menuItemRestoreJob;
    wxMenuItem* m_menuItemTest;
    wxMenuItem* m_menuItemSep4;
    wxMenuItem* m_menuItemDump;
    wxMenuItem* m_menuItemSep2;
    wxMenuItem* menuItemFileExit;
    wxMenu* m_menuOptions;
    wxMenuItem* m_menuItemOptions;
    wxMenuItem* m_menuItem180;
    wxMenuItem* m_menuItemLogShow;
    wxMenuItem* m_menuItemLogClear;
    wxMenuItem* m_menuItem472;
    wxMenuItem* m_menuItemOpenLogFiles;
    wxMenuItem* m_menuItemDeleteLogFile;
    wxMenu* m_menuCrash;
    wxMenuItem* m_menuItemCrashException;
    wxMenu* m_menuHelp;
    wxMenuItem* m_menuItemHelp;
    wxMenuItem* m_menuItemCheck4Updates;
    wxMenuItem* m_menuAbout;
    wxToolBar* m_toolbarMain;
    wxGauge* m_gaugeProgress;
    wxStaticText* m_staticTextWhenDone;
    wxChoice* m_choiceWhenDone;
    wxCheckBox* m_checkBoxWhenDone;
    wxSplitterWindow* m_splitterMain;
    wxPanel* m_panelMain;
    wxSplitterWindow* m_splitterJob;
    wxPanel* m_splitterPageJobList;
    wxTextCtrl* m_textCtrlJobList;
    wxPanel* m_splitterPageJobContent;
    wxNotebook* m_notebookJob;
    wxPanel* m_panelSummary;
    wxRichTextCtrl* m_richTextCtrlSummary;
    wxPanel* m_panelSpecialFiles;
    wxTextCtrl* m_textCtrlSpecialFiles;
    wxPanel* m_panelErrors;
    wxTextCtrl* m_textCtrlErrors;
    wxPanel* m_panelLog;
    wxTextCtrl* m_textCtrlLog;
    wxStatusBar* m_statusBar;

protected:
    virtual void OnMainFrameSize(wxSizeEvent& event) { event.Skip(); }
    virtual void OnNewJobFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIMenuNewJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSelJobFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuSel(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnEditJobFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuEdit(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRenameFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveAsFile(wxCommandEvent& event) { event.Skip(); }
    virtual void OnStartWorker(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuBackup(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRestoreJob(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuRestore(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnTestJob(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuTest(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnDumpZipList(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIMenuDump(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnOptions(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuOptions(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMenuItemLogShow(wxCommandEvent& event) { event.Skip(); }
    virtual void OnMenuItemLogClear(wxCommandEvent& event) { event.Skip(); }
    virtual void OnMenuItemOpenLogFiles(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuOpenLog(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMenuItemDeleteLogFiles(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuDelLog(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCauseException(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuCrash(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnMenuShowHelpContents(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiMenuHelp(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCheck4Update(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbNewJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbOpenJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnDeleteFileCLick(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbDeleteJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbEditJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbBackupJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbRestoreJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnUpdateUITbTestJob(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnStop(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUiTbStop(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnWhenDoneClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnJobsSelectLine(wxMouseEvent& event) { event.Skip(); }
    virtual void OnJobListRightClick(wxContextMenuEvent& event) { event.Skip(); }
    virtual void OnJobListChar(wxKeyEvent& event) { event.Skip(); }

public:
    wxMenuBar* GetMenubarMain() { return m_menubarMain; }
    wxGauge* GetGaugeProgress() { return m_gaugeProgress; }
    wxStaticText* GetStaticTextWhenDone() { return m_staticTextWhenDone; }
    wxChoice* GetChoiceWhenDone() { return m_choiceWhenDone; }
    wxCheckBox* GetCheckBoxWhenDone() { return m_checkBoxWhenDone; }
    wxToolBar* GetToolbarMain() { return m_toolbarMain; }
    wxTextCtrl* GetTextCtrlJobList() { return m_textCtrlJobList; }
    wxPanel* GetSplitterPageJobList() { return m_splitterPageJobList; }
    wxRichTextCtrl* GetRichTextCtrlSummary() { return m_richTextCtrlSummary; }
    wxPanel* GetPanelSummary() { return m_panelSummary; }
    wxTextCtrl* GetTextCtrlSpecialFiles() { return m_textCtrlSpecialFiles; }
    wxPanel* GetPanelSpecialFiles() { return m_panelSpecialFiles; }
    wxTextCtrl* GetTextCtrlErrors() { return m_textCtrlErrors; }
    wxPanel* GetPanelErrors() { return m_panelErrors; }
    wxNotebook* GetNotebookJob() { return m_notebookJob; }
    wxPanel* GetSplitterPageJobContent() { return m_splitterPageJobContent; }
    wxSplitterWindow* GetSplitterJob() { return m_splitterJob; }
    wxPanel* GetPanelMain() { return m_panelMain; }
    wxTextCtrl* GetTextCtrlLog() { return m_textCtrlLog; }
    wxPanel* GetPanelLog() { return m_panelLog; }
    wxSplitterWindow* GetSplitterMain() { return m_splitterMain; }
    wxStatusBar* GetStatusBar() { return m_statusBar; }
    MyFrameBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("%s - %s - Version %d.%d - Build: %d"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(600,522), long style = wxDEFAULT_FRAME_STYLE|wxRESIZE_BORDER|wxTAB_TRAVERSAL);
    virtual ~MyFrameBase();
};


class MyBaseOptionsDialog : public wxDialog
{
public:
    enum {
        wxID_SELCT_LOG_DIR = 10001,
    };
protected:
    wxNotebook* m_nbOptions;
    wxPanel* m_panelGeneral;
    wxSpinCtrl* m_spinCtrlSummaryUpdate;
    wxCheckBox* m_checkBoxLoadLastJobAtStart;
    wxCheckBox* m_checkBoxCheck4NewVersionAtStart;
    wxCheckBox* m_checkBoxToolbarText;
    wxCheckBox* m_checkBoxDisplayDestnWarning;
    wxCheckBox* m_checkBoxShowFullJobPath;
    wxRadioBox* m_radioBoxRemovable;
    wxCheckBox* m_checkBoxOptLogUseTempDefaultPath;
    wxDirPickerCtrl* m_dirPickerOptTempFilesDir;
    wxChoice* m_choiceDlgOutputBagSize;
    wxPanel* m_panelLog;
    wxCheckBox* m_checkBoxClearLogAtStart;
    wxCheckBox* m_checkBoxClearLogAtTest;
    wxCheckBox* m_checkBoxOptLogToFile;
    wxCheckBox* m_checkBoxOptLogUseDefaultPath;
    wxTextCtrl* m_textCtrlOptLogFilesDestDir;
    wxButton* m_buttonOptLogSelLogFilesDir;
    wxSlider* m_sliderOptLogVerbosity;
    wxRadioBox* m_radioBoxNewLogWhen;
    wxStaticText* m_staticText46;
    wxSpinCtrl* m_spinCtrlLogLife;
    wxStaticText* m_staticText50;
    wxPanel* m_panelTasks;
    wxListCtrl* m_listCtrlOptEmailClients;
    wxCheckBox* m_checkBoxOptKillRestart;
    wxPanel* m_panelSound;
    wxCheckBox* m_checkBoxSound;
    wxFilePickerCtrl* m_filePickerSoundError;
    wxFilePickerCtrl* m_filePickerSoundWarning;
    wxFilePickerCtrl* m_filePickerSoundCompln;
    wxPanel* m_panelEmail;
    wxCheckBox* m_checkBoxDefaultEmail;
    wxTextCtrl* m_textCtrlDefaultServer;
    wxTextCtrl* m_textCtrlDefaultFrom;
    wxTextCtrl* m_textCtrlDefaultTo;
    wxTextCtrl* m_textCtrlDefaultSubject;
    wxButton* m_OptGeneralOK;
    wxButton* m_OptGeneralCancel;
    wxButton* m_OptGeneralHelp;

protected:
    virtual void OnOptDlgGen_UseDefaultTempDirClick(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgLog_ClearLogAtStart(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgLog_Log2FileClick(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgLog_DefPathClick(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgLog_SelLogFilePathClick(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgSnd_WantSound(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOptDlgSnd_OnSelectErrorSound(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnOptDlgSnd_OnSelectWarningSound(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnOptDlgSnd_OnSelectCompletionSound(wxFileDirPickerEvent& event) { event.Skip(); }

public:
    wxSpinCtrl* GetSpinCtrlSummaryUpdate() { return m_spinCtrlSummaryUpdate; }
    wxCheckBox* GetCheckBoxLoadLastJobAtStart() { return m_checkBoxLoadLastJobAtStart; }
    wxCheckBox* GetCheckBoxCheck4NewVersionAtStart() { return m_checkBoxCheck4NewVersionAtStart; }
    wxCheckBox* GetCheckBoxToolbarText() { return m_checkBoxToolbarText; }
    wxCheckBox* GetCheckBoxDisplayDestnWarning() { return m_checkBoxDisplayDestnWarning; }
    wxCheckBox* GetCheckBoxShowFullJobPath() { return m_checkBoxShowFullJobPath; }
    wxRadioBox* GetRadioBoxRemovable() { return m_radioBoxRemovable; }
    wxCheckBox* GetCheckBoxOptLogUseTempDefaultPath() { return m_checkBoxOptLogUseTempDefaultPath; }
    wxDirPickerCtrl* GetDirPickerOptTempFilesDir() { return m_dirPickerOptTempFilesDir; }
    wxChoice* GetChoiceDlgOutputBagSize() { return m_choiceDlgOutputBagSize; }
    wxPanel* GetPanelGeneral() { return m_panelGeneral; }
    wxCheckBox* GetCheckBoxClearLogAtStart() { return m_checkBoxClearLogAtStart; }
    wxCheckBox* GetCheckBoxClearLogAtTest() { return m_checkBoxClearLogAtTest; }
    wxCheckBox* GetCheckBoxOptLogToFile() { return m_checkBoxOptLogToFile; }
    wxCheckBox* GetCheckBoxOptLogUseDefaultPath() { return m_checkBoxOptLogUseDefaultPath; }
    wxTextCtrl* GetTextCtrlOptLogFilesDestDir() { return m_textCtrlOptLogFilesDestDir; }
    wxButton* GetButtonOptLogSelLogFilesDir() { return m_buttonOptLogSelLogFilesDir; }
    wxSlider* GetSliderOptLogVerbosity() { return m_sliderOptLogVerbosity; }
    wxRadioBox* GetRadioBoxNewLogWhen() { return m_radioBoxNewLogWhen; }
    wxStaticText* GetStaticText46() { return m_staticText46; }
    wxSpinCtrl* GetSpinCtrlLogLife() { return m_spinCtrlLogLife; }
    wxStaticText* GetStaticText50() { return m_staticText50; }
    wxPanel* GetPanelLog() { return m_panelLog; }
    wxListCtrl* GetListCtrlOptEmailClients() { return m_listCtrlOptEmailClients; }
    wxCheckBox* GetCheckBoxOptKillRestart() { return m_checkBoxOptKillRestart; }
    wxPanel* GetPanelTasks() { return m_panelTasks; }
    wxCheckBox* GetCheckBoxSound() { return m_checkBoxSound; }
    wxFilePickerCtrl* GetFilePickerSoundError() { return m_filePickerSoundError; }
    wxFilePickerCtrl* GetFilePickerSoundWarning() { return m_filePickerSoundWarning; }
    wxFilePickerCtrl* GetFilePickerSoundCompln() { return m_filePickerSoundCompln; }
    wxPanel* GetPanelSound() { return m_panelSound; }
    wxCheckBox* GetCheckBoxDefaultEmail() { return m_checkBoxDefaultEmail; }
    wxTextCtrl* GetTextCtrlDefaultServer() { return m_textCtrlDefaultServer; }
    wxTextCtrl* GetTextCtrlDefaultFrom() { return m_textCtrlDefaultFrom; }
    wxTextCtrl* GetTextCtrlDefaultTo() { return m_textCtrlDefaultTo; }
    wxTextCtrl* GetTextCtrlDefaultSubject() { return m_textCtrlDefaultSubject; }
    wxPanel* GetPanelEmail() { return m_panelEmail; }
    wxNotebook* GetNbOptions() { return m_nbOptions; }
    wxButton* GetOptGeneralOK() { return m_OptGeneralOK; }
    wxButton* GetOptGeneralCancel() { return m_OptGeneralCancel; }
    wxButton* GetOptGeneralHelp() { return m_OptGeneralHelp; }
    MyBaseOptionsDialog(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("General Options"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~MyBaseOptionsDialog();
};


class wxBupRestoreDlgBase : public wxDialog
{
protected:
    wxPanel* m_panelSource;
    wxDirPickerCtrl* m_dirPickerRestoreSrc;
    wxPanel* m_panelTarget;
    wxDirPickerCtrl* m_dirPickerRestoreTarget;
    wxCheckBox* m_checkBoxClearTarget;
    wxButton* m_buttonOK11;
    wxButton* m_buttonCancel12;

protected:

public:
    wxDirPickerCtrl* GetDirPickerRestoreSrc() { return m_dirPickerRestoreSrc; }
    wxPanel* GetPanelSource() { return m_panelSource; }
    wxDirPickerCtrl* GetDirPickerRestoreTarget() { return m_dirPickerRestoreTarget; }
    wxCheckBox* GetCheckBoxClearTarget() { return m_checkBoxClearTarget; }
    wxPanel* GetPanelTarget() { return m_panelTarget; }
    wxButton* GetButtonOK11() { return m_buttonOK11; }
    wxButton* GetButtonCancel12() { return m_buttonCancel12; }
    wxBupRestoreDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Restore"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~wxBupRestoreDlgBase();
};


class wxBupJobDataDlgBase : public wxDialog
{
public:
    enum {
        wxID_MOVE_AS_IS = 10001,
        wxID_NJ_BAG_SIZE = 10002,
        wxID_NJ_BASE_NAME = 10003,
        wxID_NJ_DESTIN = 10004,
        wxID_NJ_ENABLED = 10005,
        wxID_NJ_EXCLUSIONS = 10006,
        wxID_NJ_INCLSUBDIRS = 10007,
        wxID_NJ_INCL_MT_DIRS = 10008,
        wxID_NJ_MOVE_AS_IS = 10009,
        wxID_NJ_SOURCE_FILES = 10010,
        wxID_NJ_TASK_NAME = 10011,
    };
protected:
    wxTreebook* m_treebookJob;
    wxPanel* m_panelMainJobName;
    wxPanel* m_panelGeneral;
    wxStaticText* m_staticTextTaskGeneral;
    wxTextCtrl* m_textCtrlTaskName;
    wxCheckBox* m_checkBoxJobEnabled;
    wxCheckBox* m_checkBoxJobIncludeSubDirs;
    wxRadioBox* m_radioBoxBackupType;
    wxStaticText* m_staticTextBackupTypeExplain;
    wxTextCtrl* m_textCtrlJobComments;
    wxPanel* m_panelMainFiles;
    wxPanel* m_panelFiles;
    wxStaticText* m_staticTextTaskFiles;
    wxDirPickerCtrl* m_dirPickerDestinationDir;
    wxRadioBox* m_radioBoxDestnMedia;
    wxStaticText* m_staticTextDestnNotes;
    wxSplitterWindow* m_splitterJobEditFiles;
    wxPanel* m_splitterPageSourceList;
    wxListBox* m_listBoxSource;
    wxButton* m_buttonSrcDel;
    wxPanel* m_splitterPageDirPicker;
    wxGenericDirCtrl* m_genericDirCtrlSrcPicker;
    wxPanel* m_panelMainProperties;
    wxPanel* m_panelProperties2781;
    wxStaticText* m_staticTextTaskProperties;
    wxTextCtrl* m_textCtrlWizZipChunkBaseFileName;
    wxChoice* m_choiceWizOutputBagSize;
    wxCheckBox* m_checkBoxIncludeEmptyDirs;
    wxPanel* m_panelMainFilters;
    wxPanel* m_panelFilters3892;
    wxStaticText* m_staticTextTaskFilters;
    wxComboBox* m_comboBoxWizFileExclusions;
    wxComboBox* m_comboBoxWizDirExclusions;
    wxComboBox* m_comboBoxMoveAsIs;
    wxPanel* m_panelMainZip;
    wxPanel* m_panelZipEncrypt;
    wxStaticText* m_staticTextTaskZipEncrypt;
    wxPanel* m_panel77250104;
    wxRadioBox* m_radioBoxWizZipOrMove;
    wxPanel* m_panelMainInterferingTasks;
    wxPanel* m_panel1424;
    wxStaticText* m_staticTextInterferingTasks;
    wxCheckListBox* m_checkListBoxTasks2Kill;
    wxTextCtrl* m_textCtrlWizEmailClients;
    wxPanel* m_panelNotification;
    wxPanel* m_panel1420;
    wxStaticText* m_staticTextNotification;
    wxCheckBox* m_checkEmailWanted;
    wxStaticText* m_staticTextNotificationSmtpServer;
    wxTextCtrl* m_textCtrlNotificationServer;
    wxButton* m_buttonNotificationAdvanced;
    wxStaticText* m_staticTextNotificationFrom;
    wxTextCtrl* m_textCtrlNotificationFrom;
    wxStaticText* m_staticTextNotificationTo;
    wxTextCtrl* m_textCtrlNotificationTo;
    wxStaticText* m_staticTextNotificationSubject;
    wxTextCtrl* m_textCtrlNotificationSubject;
    wxStaticText* m_staticText136219;
    wxCheckBox* m_checkBoxNotifyOnError;
    wxCheckBox* m_checkBoxAddLogFile;
    wxButton* m_buttonNotificationSendTest;
    wxPanel* m_panelWhenDone;
    wxPanel* m_panel1428;
    wxStaticText* m_staticTextWhenDone;
    wxCheckBox* m_checkBoxRunVerify;
    wxStdDialogButtonSizer* m_stdBtnSizer914107;
    wxButton* m_buttonJobOK;
    wxButton* m_buttonJobCancel;

protected:
    virtual void OnTreebookJobPageChanged(wxTreebookEvent& event) { event.Skip(); }
    virtual void OnBackupTypeClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnWizDestnDirChanged(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnWizDestnDirMouseCapLost(wxMouseCaptureLostEvent& event) { event.Skip(); }
    virtual void OnDestnDriveIdChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSourceListSelect(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateUIButtonSrcDel(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnWizSrcDel(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBeginDrag(wxTreeEvent& event) { event.Skip(); }
    virtual void OnSourceTreeKeyDown(wxTreeEvent& event) { event.Skip(); }
    virtual void OnJobOptionEmailWanted(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNotificationSendTestMessage(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticTextTaskGeneral() { return m_staticTextTaskGeneral; }
    wxTextCtrl* GetTextCtrlTaskName() { return m_textCtrlTaskName; }
    wxCheckBox* GetCheckBoxJobEnabled() { return m_checkBoxJobEnabled; }
    wxCheckBox* GetCheckBoxJobIncludeSubDirs() { return m_checkBoxJobIncludeSubDirs; }
    wxRadioBox* GetRadioBoxBackupType() { return m_radioBoxBackupType; }
    wxStaticText* GetStaticTextBackupTypeExplain() { return m_staticTextBackupTypeExplain; }
    wxTextCtrl* GetTextCtrlJobComments() { return m_textCtrlJobComments; }
    wxPanel* GetPanelGeneral() { return m_panelGeneral; }
    wxPanel* GetPanelMainJobName() { return m_panelMainJobName; }
    wxStaticText* GetStaticTextTaskFiles() { return m_staticTextTaskFiles; }
    wxDirPickerCtrl* GetDirPickerDestinationDir() { return m_dirPickerDestinationDir; }
    wxRadioBox* GetRadioBoxDestnMedia() { return m_radioBoxDestnMedia; }
    wxStaticText* GetStaticTextDestnNotes() { return m_staticTextDestnNotes; }
    wxListBox* GetListBoxSource() { return m_listBoxSource; }
    wxButton* GetButtonSrcDel() { return m_buttonSrcDel; }
    wxPanel* GetSplitterPageSourceList() { return m_splitterPageSourceList; }
    wxGenericDirCtrl* GetGenericDirCtrlSrcPicker() { return m_genericDirCtrlSrcPicker; }
    wxPanel* GetSplitterPageDirPicker() { return m_splitterPageDirPicker; }
    wxSplitterWindow* GetSplitterJobEditFiles() { return m_splitterJobEditFiles; }
    wxPanel* GetPanelFiles() { return m_panelFiles; }
    wxPanel* GetPanelMainFiles() { return m_panelMainFiles; }
    wxStaticText* GetStaticTextTaskProperties() { return m_staticTextTaskProperties; }
    wxTextCtrl* GetTextCtrlWizZipChunkBaseFileName() { return m_textCtrlWizZipChunkBaseFileName; }
    wxChoice* GetChoiceWizOutputBagSize() { return m_choiceWizOutputBagSize; }
    wxCheckBox* GetCheckBoxIncludeEmptyDirs() { return m_checkBoxIncludeEmptyDirs; }
    wxPanel* GetPanelProperties2781() { return m_panelProperties2781; }
    wxPanel* GetPanelMainProperties() { return m_panelMainProperties; }
    wxStaticText* GetStaticTextTaskFilters() { return m_staticTextTaskFilters; }
    wxComboBox* GetComboBoxWizFileExclusions() { return m_comboBoxWizFileExclusions; }
    wxComboBox* GetComboBoxWizDirExclusions() { return m_comboBoxWizDirExclusions; }
    wxComboBox* GetComboBoxMoveAsIs() { return m_comboBoxMoveAsIs; }
    wxPanel* GetPanelFilters3892() { return m_panelFilters3892; }
    wxPanel* GetPanelMainFilters() { return m_panelMainFilters; }
    wxStaticText* GetStaticTextTaskZipEncrypt() { return m_staticTextTaskZipEncrypt; }
    wxRadioBox* GetRadioBoxWizZipOrMove() { return m_radioBoxWizZipOrMove; }
    wxPanel* GetPanel77250104() { return m_panel77250104; }
    wxPanel* GetPanelZipEncrypt() { return m_panelZipEncrypt; }
    wxPanel* GetPanelMainZip() { return m_panelMainZip; }
    wxStaticText* GetStaticTextInterferingTasks() { return m_staticTextInterferingTasks; }
    wxCheckListBox* GetCheckListBoxTasks2Kill() { return m_checkListBoxTasks2Kill; }
    wxTextCtrl* GetTextCtrlWizEmailClients() { return m_textCtrlWizEmailClients; }
    wxPanel* GetPanel1424() { return m_panel1424; }
    wxPanel* GetPanelMainInterferingTasks() { return m_panelMainInterferingTasks; }
    wxStaticText* GetStaticTextNotification() { return m_staticTextNotification; }
    wxCheckBox* GetCheckEmailWanted() { return m_checkEmailWanted; }
    wxStaticText* GetStaticTextNotificationSmtpServer() { return m_staticTextNotificationSmtpServer; }
    wxTextCtrl* GetTextCtrlNotificationServer() { return m_textCtrlNotificationServer; }
    wxButton* GetButtonNotificationAdvanced() { return m_buttonNotificationAdvanced; }
    wxStaticText* GetStaticTextNotificationFrom() { return m_staticTextNotificationFrom; }
    wxTextCtrl* GetTextCtrlNotificationFrom() { return m_textCtrlNotificationFrom; }
    wxStaticText* GetStaticTextNotificationTo() { return m_staticTextNotificationTo; }
    wxTextCtrl* GetTextCtrlNotificationTo() { return m_textCtrlNotificationTo; }
    wxStaticText* GetStaticTextNotificationSubject() { return m_staticTextNotificationSubject; }
    wxTextCtrl* GetTextCtrlNotificationSubject() { return m_textCtrlNotificationSubject; }
    wxStaticText* GetStaticText136219() { return m_staticText136219; }
    wxCheckBox* GetCheckBoxNotifyOnError() { return m_checkBoxNotifyOnError; }
    wxCheckBox* GetCheckBoxAddLogFile() { return m_checkBoxAddLogFile; }
    wxButton* GetButtonNotificationSendTest() { return m_buttonNotificationSendTest; }
    wxPanel* GetPanel1420() { return m_panel1420; }
    wxPanel* GetPanelNotification() { return m_panelNotification; }
    wxStaticText* GetStaticTextWhenDone() { return m_staticTextWhenDone; }
    wxCheckBox* GetCheckBoxRunVerify() { return m_checkBoxRunVerify; }
    wxPanel* GetPanel1428() { return m_panel1428; }
    wxPanel* GetPanelWhenDone() { return m_panelWhenDone; }
    wxTreebook* GetTreebookJob() { return m_treebookJob; }
    wxBupJobDataDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Job"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~wxBupJobDataDlgBase();
};


class MyOverWriteDlgBase : public wxDialog
{
public:
    enum {
        wxID_STOP_DEL_WARN = 10001,
    };
protected:
    wxPanel* m_panel1088;
    wxStaticText* m_staticTextWarnDestDir;
    wxStaticText* m_staticTextDestDeleteWarning;
    wxStaticText* m_staticText1096;
    wxStdDialogButtonSizer* m_stdBtnSizer1104;
    wxButton* m_buttonDelWarningOK;
    wxButton* m_buttonDelWarningCancel;
    wxCheckBox* m_checkBoxShowWarning;
    wxStaticText* m_staticTextReinstate;

protected:
    virtual void OnUpdateUiWarnCheckBox(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnStopDestDeleteWarning(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticTextWarnDestDir() { return m_staticTextWarnDestDir; }
    wxStaticText* GetStaticTextDestDeleteWarning() { return m_staticTextDestDeleteWarning; }
    wxStaticText* GetStaticText1096() { return m_staticText1096; }
    wxCheckBox* GetCheckBoxShowWarning() { return m_checkBoxShowWarning; }
    wxStaticText* GetStaticTextReinstate() { return m_staticTextReinstate; }
    wxPanel* GetPanel1088() { return m_panel1088; }
    MyOverWriteDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Delete Destination Data"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~MyOverWriteDlgBase();
};


class MyBupUpdateDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel1168;
    wxStaticText* m_staticTextVersion;
    wxStaticText* m_staticText1152;
    wxHyperlinkCtrl* m_hyperLinkBupUpdatePage;
    wxStaticText* m_staticText1156;
    wxStaticText* m_staticText1158;
    wxStaticLine* m_staticLine1160;
    wxStaticText* m_staticText1162;
    wxStaticText* m_staticText1164;
    wxButton* m_button1166;

protected:

public:
    wxStaticText* GetStaticTextVersion() { return m_staticTextVersion; }
    wxStaticText* GetStaticText1152() { return m_staticText1152; }
    wxHyperlinkCtrl* GetHyperLinkBupUpdatePage() { return m_hyperLinkBupUpdatePage; }
    wxStaticText* GetStaticText1156() { return m_staticText1156; }
    wxStaticText* GetStaticText1158() { return m_staticText1158; }
    wxStaticLine* GetStaticLine1160() { return m_staticLine1160; }
    wxStaticText* GetStaticText1162() { return m_staticText1162; }
    wxStaticText* GetStaticText1164() { return m_staticText1164; }
    wxPanel* GetPanel1168() { return m_panel1168; }
    wxButton* GetButton1166() { return m_button1166; }
    MyBupUpdateDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Update Check"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400,250), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~MyBupUpdateDlgBase();
};

#endif
